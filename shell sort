import random
import os

def generate_data_files(num_files=75, min_size=100, max_size=10000, dir_name='data'):
    os.makedirs(dir_name, exist_ok=True)
    sizes = [random.randint(min_size, max_size) for _ in range(num_files)]
    for i, size in enumerate(sizes):
        data = [random.randint(0, 1000000) for _ in range(size)]
        with open(f'{dir_name}/input_{i}.txt', 'w') as f:
            f.write(' '.join(map(str, data)))

if __name__ == '__main__':
    generate_data_files()

import time
import os
import matplotlib.pyplot as plt

# Чтение данных из файла
def read_data_from_file(filename):
    with open(filename, 'r') as f:
        data = list(map(int, f.read().split()))
    return data

# Shell sort
def shell_sort(arr):
    n = len(arr)
    gap = n // 2
    iterations = 0
    start_time = time.perf_counter()
    while gap > 0:
        for i in range(gap, n):
            temp = arr[i]
            j = i
            while j >= gap and arr[j - gap] > temp:
                arr[j] = arr[j - gap]
                j -= gap
                iterations += 1
            arr[j] = temp
            iterations += 1
        gap //= 2
    elapsed_time = time.perf_counter() - start_time
    return elapsed_time, iterations

# Основной цикл запуска
def run_experiments():
    dir_name = 'data'
    files = sorted(os.listdir(dir_name),
                   key=lambda f: len(read_data_from_file(f'{dir_name}/{f}')))
    sizes, times, iterations_list = [], [], []

    for file in files:
        data = read_data_from_file(f'{dir_name}/{file}')
        elapsed_time, iterations = shell_sort(data)
        sizes.append(len(data))
        times.append(elapsed_time)
        iterations_list.append(iterations)
        print(f'{file}: Размер={len(data)}, Время={elapsed_time:.6f}s, Итерации={iterations}')

    # Графики
    plt.figure(figsize=(12, 5))

    plt.subplot(1, 2, 1)
    plt.plot(sizes, times, 'bo-', markersize=2)
    plt.xlabel('Размер входных данных')
    plt.ylabel('Время (секунды)')
    plt.title('Зависимость времени выполнения от размера данных')

    plt.subplot(1, 2, 2)
    plt.plot(sizes, iterations_list, 'ro-', markersize=2)
    plt.xlabel('Размер входных данных')
    plt.ylabel('Количество итераций')
    plt.title('Зависимость итераций от размера данных')

    plt.tight_layout()
    plt.show()

if __name__ == '__main__':
    run_experiments()
